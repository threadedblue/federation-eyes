apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'

applicationName = 'federation-eyes'
sourceCompatibility = 1.8
mainClassName = 'iox.hla.FederationEyesApplication'
archivesBaseName = applicationName
group = 'iox.hla'
version = '0.0.1'

def jarFile = buildDir.name + "/libs/" + applicationName + "-" + version + ".jar"
// + "/libs/" + applicationName + ".jar"
println "jarFile=" + jarFile
println "compile=" + configurations.compile

configure(install.repositories.mavenInstaller) {
    pom.project {
        groupId group
        artifactId applicationName
        inceptionYear '2017'
        packaging 'jar'
    }
}

clean {
    delete "${buildDir}" 
    delete "${applicationName}" 
}

repositories {
    maven {url 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath;}
    jcenter()
}

dependencies {

    // local flat 
    compile project (':federate-core')
    compile 'iox.emf:fom2emf:0.0.1'
   
    // DropWizard
    compile 'io.dropwizard:dropwizard-core:1.2.0'
 
    // EMF
    compile 'org.eclipse.emf:org.eclipse.emf.common:2.12.0'
    compile 'org.eclipse.emf:org.eclipse.emf.ecore:2.12.0'
    compile 'org.eclipse.emf:org.eclipse.emf.ecore.xmi:2.12.0'
    compile 'commons-io:commons-io:2.5'
    
    // Logging
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.3.0'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.2.3'
    compile 'log4j:log4j:1.2.17'
    
    testCompile 'com.jayway.restassured:rest-assured:2.9.0'
    testCompile 'junit:junit:4.+'
}

task assemblex {
    dependsOn jar
    inputs.file jarFile
    outputs.dir applicationName
   doLast{ 
      copy {
            from "${buildDir}/libs"
            into "${applicationName}"
            fileMode = 0777
        }
       copy {
            from "conf/"
            into "${applicationName}/conf"
        }
       copy {
            from configurations.runtime
            into "$applicationName/lib"
        }
   }
}

jar {
    // Keep jar clean:
    exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.MF'
    manifest {
        attributes ('Main-Class': mainClassName,
                   'Class-Path': ' lib/' + configurations.runtime.collect { it.getName() }.join(' lib/'))
    }
}